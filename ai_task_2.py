# -*- coding: utf-8 -*-
"""Task-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1enVDIPQT5VJmP0bHA9tQbQo4Qk5WqOgk
"""

from PIL import Image, ImageDraw, ImageFont

example_image = Image.open("Case_Image.png")

example_ad_size = example_image.size

background = Image.new("RGB", example_ad_size, "white")

print("Görsel Boyutları:", example_ad_size)

logo_image = Image.open("/content/Logo_Case_1.png").convert("RGBA")
coffee_image = Image.open("/content/Task-1__Output-Image.png").convert("RGBA")

logo_x_centered = (example_ad_size[0] - logo_image.width) // 2
logo_position = (logo_x_centered, 20)
background.paste(logo_image, logo_position, logo_image)

new_size_percentage = 0.68
new_width = int(coffee_image.width * new_size_percentage)
new_height = int(coffee_image.height * new_size_percentage)
coffee_image = coffee_image.resize((new_width, new_height), Image.Resampling.LANCZOS)

coffee_x = (example_ad_size[0] - new_width) // 2
coffee_y = logo_position[1] + logo_image.height + 10
background.paste(coffee_image, (coffee_x, coffee_y), coffee_image)

import requests
from zipfile import ZipFile
from io import BytesIO

font_url = "https://fonts.google.com/download?family=Playfair%20Display"
response = requests.get(font_url)
zip_file = ZipFile(BytesIO(response.content))
zip_file.extractall("/usr/share/fonts/truetype/playfair")

font_files = zip_file.namelist()
ttf_files = [file for file in font_files if file.endswith('.ttf')]

font_semi_bold_path = next((f"/usr/share/fonts/truetype/playfair/{file}" for file in ttf_files if "SemiBold" in file), None)

punchline_font = ImageFont.truetype(font_semi_bold_path, 45)
button_font = ImageFont.truetype(font_semi_bold_path, 17)

punchline_text = "AI ad banners lead to higher conversions ratesxxxx"
button_text = "Call to action text here!  >"

punchline_image = Image.new("RGB" , (background.width, 100) , "white")
punchline_draw = ImageDraw.Draw(punchline_image)

punchline_text_lines = ["AI ad banners lead to higher", "conversions ratesxxxx"]
punchline_y = coffee_y + coffee_image.height + 20
for i, line in enumerate(punchline_text_lines):
    w, h = punchline_draw.textbbox((0, 0), line, font=punchline_font)[2:]
    punchline_draw.text(((background.width - w) // 2, i * h), line, fill="316346", font=punchline_font)

button_image = Image.new("RGBA" , (background.width, 50) , "#316346")
button_draw = ImageDraw.Draw(button_image)

button_text_width, button_text_height = button_draw.textbbox((0, 0), button_text, font=button_font)[2:]
padding = 20
button_background_width = button_text_width + 2 * padding
button_background_height = button_text_height + 2 * padding
button_image = button_image.resize((button_background_width, button_background_height))
button_draw = ImageDraw.Draw(button_image)
text_x = (button_background_width - button_text_width) // 2
text_y = (button_background_height - button_text_height) // 2
button_draw.text((text_x, text_y), button_text, font=button_font, fill="white")

background.paste(punchline_image, (0, punchline_y))

button_x = (example_ad_size[0] - button_background_width) // 2
button_y = punchline_y + 100 + 35
background.paste(button_image , (button_x, button_y) , button_image.split()[3])


background.save('/content/Task-2__Output-Image.png')
background.show()